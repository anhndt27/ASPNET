@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ASPNETBLL.DTOs.Filter.Paging<ASPNETBLL.DTOs.StudentQueryDto.StudentDto>

@{
    ViewData["Title"] = "Index";
}

<h1>List Student</h1>
<div class="row">
    <div class="col-lg-12">
        <div class="from-group">
            @Html.Raw(@ViewBag.Alert)
        </div>
    </div>
</div>
<p>
    <a class="btn-outline-primary btn-sm" asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default btn-sm" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table id="myTable" class="table table-info table-striped ">
    <thead class="table-dark" style="color: white">
    <tr>
        <th>
            Id
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Name</a>
            @*@Html.DisplayNameFor(model => model.Name)*@
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["CodeSortParm"]">Code</a>
            @*@Html.DisplayNameFor(model => model.Code)*@
        </th>
        <th>
            Course
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cource)
            </td>
            <td>
                <a class="btn-outline-primary btn-sm" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a class="btn-outline-primary btn-sm" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a class="btn-outline-primary btn-sm" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-sm btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-sm btn-default @nextDisabled">
    Next
</a>
@section Scripts{
    <script type="text/javascript">

        $(document).ready(function () {
            $('#myTable').DataTable();
        });
</script>
}